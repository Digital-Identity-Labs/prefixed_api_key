defmodule CompatibilityTest do
  use ExUnit.Case

  @origin_examples [

    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "AyoTFeNi",
      long_token: "5fBc1EMjFp71sBM3mjjn5KZV",
      hash: "7736a9dff93f56697b1591765ca10edb847a118c60c66357cb3e755374e5bad3",
      api_key: "mycompany_AyoTFeNi_5fBc1EMjFp71sBM3mjjn5KZV"
    },
    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "hGLvK8vr",
      long_token: "F7QohYaSvy9eddrDyu8pCjan",
      hash: "f4c772891f322b2e58bb8e7dda2b6ce771eed7a61b6ae2a8f4dd98b2a9a90651",
      api_key: "mycompany_hGLvK8vr_F7QohYaSvy9eddrDyu8pCjan"
    },
    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "PwAHhDd8",
      long_token: "3AL6bBT2FZpLA6VCoXs5pFi1",
      hash: "78595c6db0ef9985d26baded6abf0bd8ce62f18bff06c20b9d65dcef303dee7a",
      api_key: "mycompany_PwAHhDd8_3AL6bBT2FZpLA6VCoXs5pFi1"
    },
    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "ffmoAGhh",
      long_token: "4LCFVWpsVKknfm6DsDvcnY4u",
      hash: "ec85ef7a75ed84aff80fef534f10c1446d6748533774fc200d117faf07cae132",
      api_key: "mycompany_ffmoAGhh_4LCFVWpsVKknfm6DsDvcnY4u"
    },
    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "cKzasMVE",
      long_token: "KCEqVXXR5er5HYb4h7eRbunX",
      hash: "1205914ad8732fb234a110d62f4a26261446f10bc3712fec37e620aae4820ad6",
      api_key: "mycompany_cKzasMVE_KCEqVXXR5er5HYb4h7eRbunX"
    },
    %PrefixedApiKey{
      prefix: "mycompany",
      short_token: "83LWrpGQ",
      long_token: "C17ejP1e6zf4vpqSyeUQRJZW",
      hash: "3a4c5b018874c73cd2b58e05987ccb68ea9230029741d386f6872fad3ab74cb0",
      api_key: "mycompany_83LWrpGQ_C17ejP1e6zf4vpqSyeUQRJZW"
    }
  ]

  describe "parse/1" do

    test "parses the test example from seamapi/prefixed-api-key tests" do
      {:ok, key} = PrefixedApiKey.parse("mycompany_BRTRKFsL_51FwqftsmMDHHbJAMEXXHCgG")
      assert key == %PrefixedApiKey{
               prefix: "mycompany",
               short_token: "BRTRKFsL",
               long_token: "51FwqftsmMDHHbJAMEXXHCgG",
               api_key: "mycompany_BRTRKFsL_51FwqftsmMDHHbJAMEXXHCgG",
               hash: "d70d981d87b449c107327c2a2afbf00d4b58070d6ba571aac35d7ea3e7c79f37"
             }
    end

    test "parses a list of keys generated by seamapi/prefixed-api-key" do

      for example <- @origin_examples do

        {:ok, key} = PrefixedApiKey.parse(example.api_key)
        assert key == %PrefixedApiKey{
                 prefix: example.prefix,
                 short_token: example.short_token,
                 long_token: example.long_token,
                 api_key: example.api_key,
                 hash: example.hash
               }
      end

    end

  end

  describe "valid?/2" do

    test "validates the test example from seamapi/prefixed-api-key tests" do
      assert PrefixedApiKey.valid?(
               "mycompany_BRTRKFsL_51FwqftsmMDHHbJAMEXXHCgG",
               "d70d981d87b449c107327c2a2afbf00d4b58070d6ba571aac35d7ea3e7c79f37"
             ) == true
    end

    test "validates a list of keys generated by seamapi/prefixed-api-key" do

      for example <- @origin_examples do
        assert PrefixedApiKey.valid?(example.api_key, example.hash) == true
      end

    end

  end

end




